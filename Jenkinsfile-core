@Library('CoreLogicDevopsUtils')
@Library('CoreLogicPipelineUtils')
@Library('CoreLogicOrgPipelineConfig')

import com.corelogic.devops.utils.PodTemplates
slaveTemplates = new PodTemplates()


def containerName = "java"
def label = "digital-gateway-us-${containerName}"
def dImage = "us.gcr.io/clgx-jenkins-glb-prd-8ea3/digital-gateway-us/apis/${containerName}"

def flowName = 'featureFlow'
def branchName = env.BRANCH_NAME
println "We're at the branch $branchName"
if (branchName == "develop") {
    flowName = 'developFlow'
}else if (branchName == "master") {
      flowName = 'masterFlow'
}

slaveTemplates.getPodTemplate(label, containerName, dImage) {  
    node(label){
        container(containerName) {
            def pipeline = pipelineManager.config()
            def buildType = new com.corelogic.pipeline.DeployableType(
                    appName: 'apigee-edge-microgateway',
                    ecosystemName:'apis',
                    appId: '',
                    deployToCF: false,
                    pipelineFlowName: flowName,
                    builder: new com.corelogic.builder.GenericBuilder(),
            )
            pipeline.execute(buildType)
        }
      }
   }
